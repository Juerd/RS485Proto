=head1 NAME

RS485Proto - Perl implementation of Nick Gammon's RS485 protocol

=head1 SYNOPSIS

    use RS485Proto;

    my $handle = IO::File->open(...);

    my $proto = RS485Proto->new(timeout => .1);
    $proto->add($handle);

    while (1) {
        my @messages = $proto->poll;
        ...;
    }

=head1 DESCRIPTION

This module aims to implement the "RS485 protocol" from Nick Gammon's Arduino
library C<RS485_protocol>. The interface depends on Perl filehandles instead of
callbacks, but with Perl's C<tie> you could of course still use custom code.

Neither the protocol nor this implementation actually depends on RS485. It
should also work over something else, such as RS232.

This library was tested with an FTDI USB-RS485-WE under Linux.

=head2 Class methods

=head3 new

Constructs and returns an instance. Takes named arguments. The named argument
C<timeout> is mandatory and given in seconds. Internal buffers are purged
after this timeout, which means that any message must be sent within that time.

The original Arduino library has a default timeout of 0.5 seconds. This module
does not supply a default value; 500 ms is probably too much for a busy bus.

=head2 Instance methods

=head2 add(handle)

Given a filehandle, e.g. an opened serial port, adds it to the sources from
which the RS485Proto instance can receive messages.

=head2 poll([timeout])

Reads from the device(s) and returns a list of strings, each containing a
decoded and verified message. Returns an empty list if no valid messages have
been received.

If a timeout is given, it is passed to C<< IO::Select->can_read >> instead of
the rather long default of 1 second.

Invalid messages and other noise are silently discarded. A message is invalid
when the encoding is not redundant or when the CRC does not match.

Messages are not de-duplicated.

This method should be called continuously in your program's main event loop.

=head2 select_output(handle)

Selects the given filehandle for subsequent calls to C<send>. This handle can
be, but doesn't have to be, one that was previously given to the C<add> method.

=head2 send(message)

Encodes and sends the message using the selected output handle.

The handle given to the first call to C<add> is automatically selected. Another
handle can be selected with C<select_output>.

=head1 AUTHOR

Juerd Waalboer <juerd@tnx.nl>

=head1 LICENSE

Pick your favourite OSI approved license :)

http://www.opensource.org/licenses/alphabetical

=head1 SEE ALSO

Protocol specification and rationale: http://www.gammon.com.au/forum/?id=11428
